{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anastasia\\\\Desktop\\\\NevaLK\\\\src\\\\components\\\\navigation\\\\SideDrawer.tsx\";\nimport React from 'react';\nimport clsx from 'clsx'; //icons\n\nimport { ReactComponent as MainMenuIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!@Files/mainMenu.svg\";\nimport { ReactComponent as FavoriteIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!@Files/favorite.svg\";\nimport { ReactComponent as DocumentIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!@Files/document.svg\";\nimport { ReactComponent as NotifyIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!@Files/notify.svg\";\nimport { ReactComponent as UserNotifyIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!@Files/userNotify.svg\"; //css\n\nimport styles from './styles/sideDrawer.module.scss';\nimport { WarningBall } from 'templates/warningBall';\nimport { useHistory } from 'react-router-dom';\nimport { AdminArrowMenuIcon } from '@Files/icons';\nexport const SideDrawer = React.memo(({\n  warningNotify = true,\n  warningUserNotify = false,\n  hist,\n  handleChangeDrawer\n}) => {\n  const history = useHistory();\n  const [expandAdminMenu, toggleExpandMenu] = React.useState(false); //==\n\n  const warningIcon = /*#__PURE__*/React.createElement(WarningBall, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  });\n  const menuList = [{\n    name: '/main',\n    label: 'Главная',\n    defaultIcon: MainMenuIcon,\n    warning: false,\n    url: '/'\n  }, {\n    name: '/favorite',\n    label: 'Избранное',\n    defaultIcon: FavoriteIcon,\n    warning: false,\n    url: '/favorite'\n  }, {\n    name: '/documents',\n    label: 'Документы',\n    defaultIcon: DocumentIcon,\n    warning: false,\n    url: '/documents'\n  }, {\n    name: '/events',\n    label: 'События',\n    defaultIcon: NotifyIcon,\n    warning: warningNotify,\n    url: '/events'\n  }, {\n    name: '/users/notifications',\n    label: 'Уведомления пользователей',\n    defaultIcon: UserNotifyIcon,\n    warning: warningUserNotify,\n    url: '/users/notifications'\n  }];\n  const menuListAdmin = [{\n    name: '/admin/users/notifications',\n    label: 'Уведомления пользователей',\n    defaultIcon: null,\n    warning: false,\n    url: '/admin/users/notifications'\n  }, {\n    name: '/admin/users/notifications/types',\n    label: 'Типы уведомлений',\n    defaultIcon: null,\n    warning: false,\n    url: '/admin/users/notifications/types'\n  }, {\n    name: '/admin/users',\n    label: 'Пользователи',\n    defaultIcon: null,\n    warning: false,\n    url: '/admin/users'\n  }, {\n    name: '/admin/report/power/supply',\n    label: 'Отчёты электропитания',\n    defaultIcon: null,\n    warning: false,\n    url: '/admin/report/power/supply'\n  }, {\n    name: '/admin/report/notifications',\n    label: 'Отчеты по событиям',\n    defaultIcon: UserNotifyIcon,\n    warning: false,\n    url: '/admin/report/notifications'\n  }];\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: styles.menuListWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: styles.listWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.listHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \"\\u043C\\u0435\\u043D\\u044E\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, menuList && menuList.map((item, index) => {\n    const DefaultIcon = item.defaultIcon;\n    const selected = hist === item.url;\n    return /*#__PURE__*/React.createElement(\"button\", {\n      key: index,\n      className: clsx({\n        [styles.listItem]: true,\n        [styles.listItemActive]: selected\n      }),\n      onClick: () => {\n        history.push(item.url);\n        return handleChangeDrawer(item.url);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DefaultIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: clsx({\n        [styles.listItemRootText]: true,\n        [styles.listItemTextActive]: selected\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 23\n      }\n    }, item.label), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 23\n      }\n    }, item.warning && warningIcon));\n  })))), /*#__PURE__*/React.createElement(\"section\", {\n    className: styles.menuListWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: styles.listWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.listHeader,\n    onClick: () => toggleExpandMenu(!expandAdminMenu),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, \"\\u0410\\u0434\\u043C\\u0438\\u043D\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"), \"\\xA0 \\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx({\n      [styles.listHeader__rotate]: expandAdminMenu\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(AdminArrowMenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, expandAdminMenu && menuListAdmin && menuListAdmin.map((item, index) => {\n    const selected = hist === item.url;\n    return /*#__PURE__*/React.createElement(\"button\", {\n      key: index,\n      className: clsx({\n        [styles.listItem]: true,\n        [styles.listItemActive]: selected\n      }),\n      onClick: () => {\n        history.push(item.url);\n        return handleChangeDrawer(item.url);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: clsx({\n        [styles.listItemRootTextAdmin]: true,\n        [styles.listItemTextActive]: selected\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 23\n      }\n    }, item.label), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 23\n      }\n    }, item.warning && warningIcon));\n  })))));\n});","map":{"version":3,"sources":["C:/Users/anastasia/Desktop/NevaLK/src/components/navigation/SideDrawer.tsx"],"names":["React","clsx","styles","WarningBall","useHistory","AdminArrowMenuIcon","SideDrawer","memo","warningNotify","warningUserNotify","hist","handleChangeDrawer","history","expandAdminMenu","toggleExpandMenu","useState","warningIcon","menuList","name","label","defaultIcon","MainMenuIcon","warning","url","FavoriteIcon","DocumentIcon","NotifyIcon","UserNotifyIcon","menuListAdmin","root","menuListWrapper","listWrapper","listHeader","list","map","item","index","DefaultIcon","selected","listItem","listItemActive","push","listItemRootText","listItemTextActive","listHeader__rotate","listItemRootTextAdmin"],"mappings":"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","sourcesContent":["import React from 'react'\nimport clsx from 'clsx'\n//icons\nimport { ReactComponent as MainMenuIcon } from '@Files/mainMenu.svg'\nimport { ReactComponent as FavoriteIcon } from '@Files/favorite.svg'\nimport { ReactComponent as DocumentIcon } from '@Files/document.svg'\nimport { ReactComponent as NotifyIcon } from '@Files/notify.svg'\nimport { ReactComponent as UserNotifyIcon } from '@Files/userNotify.svg'\n//css\nimport styles from './styles/sideDrawer.module.scss'\nimport { WarningBall } from 'templates/warningBall'\nimport { useHistory } from 'react-router-dom'\nimport { AdminArrowMenuIcon } from '@Files/icons'\n\ninterface IProps {\n  warningMain?: boolean\n  warningFavorite?: boolean\n  warningDocuments?: boolean\n  warningNotify?: boolean\n  warningUserNotify?: boolean\n  hist: string\n  handleChangeDrawer: (hist: string) => void\n}\nexport const SideDrawer = React.memo(\n  ({\n    warningNotify = true,\n    warningUserNotify = false,\n    hist,\n    handleChangeDrawer,\n  }: IProps) => {\n    const history = useHistory()\n    const [expandAdminMenu, toggleExpandMenu] = React.useState<boolean>(false)\n    //==\n    const warningIcon = <WarningBall />\n    const menuList = [\n      {\n        name: '/main',\n        label: 'Главная',\n        defaultIcon: MainMenuIcon,\n        warning: false,\n        url: '/',\n      },\n      {\n        name: '/favorite',\n        label: 'Избранное',\n        defaultIcon: FavoriteIcon,\n        warning: false,\n        url: '/favorite',\n      },\n      {\n        name: '/documents',\n        label: 'Документы',\n        defaultIcon: DocumentIcon,\n        warning: false,\n        url: '/documents',\n      },\n      {\n        name: '/events',\n        label: 'События',\n        defaultIcon: NotifyIcon,\n        warning: warningNotify,\n        url: '/events',\n      },\n      {\n        name: '/users/notifications',\n        label: 'Уведомления пользователей',\n        defaultIcon: UserNotifyIcon,\n        warning: warningUserNotify,\n        url: '/users/notifications',\n      },\n    ]\n    const menuListAdmin = [\n      {\n        name: '/admin/users/notifications',\n        label: 'Уведомления пользователей',\n        defaultIcon: null,\n        warning: false,\n        url: '/admin/users/notifications',\n      },\n      {\n        name: '/admin/users/notifications/types',\n        label: 'Типы уведомлений',\n        defaultIcon: null,\n        warning: false,\n        url: '/admin/users/notifications/types',\n      },\n      {\n        name: '/admin/users',\n        label: 'Пользователи',\n        defaultIcon: null,\n        warning: false,\n        url: '/admin/users',\n      },\n      {\n        name: '/admin/report/power/supply',\n        label: 'Отчёты электропитания',\n        defaultIcon: null,\n        warning: false,\n        url: '/admin/report/power/supply',\n      },\n      {\n        name: '/admin/report/notifications',\n        label: 'Отчеты по событиям',\n        defaultIcon: UserNotifyIcon,\n        warning: false,\n        url: '/admin/report/notifications',\n      },\n    ]\n    return (\n      <section className={styles.root}>\n        <section className={styles.menuListWrapper}>\n          <section className={styles.listWrapper}>\n            <div className={styles.listHeader}>меню</div>\n            <div className={styles.list}>\n              {menuList &&\n                menuList.map((item, index) => {\n                  const DefaultIcon = item.defaultIcon\n                  const selected = hist === item.url\n                  return (\n                    <button\n                      key={index}\n                      className={clsx({\n                        [styles.listItem]: true,\n                        [styles.listItemActive]: selected,\n                      })}\n                      onClick={() => {\n                        history.push(item.url)\n                        return handleChangeDrawer(item.url)\n                      }}\n                    >\n                      <DefaultIcon />\n                      <div\n                        className={clsx({\n                          [styles.listItemRootText]: true,\n                          [styles.listItemTextActive]: selected,\n                        })}\n                      >\n                        {item.label}\n                      </div>\n                      <div>{item.warning && warningIcon}</div>\n                    </button>\n                  )\n                })}\n            </div>\n          </section>\n        </section>\n        <section className={styles.menuListWrapper}>\n          <section className={styles.listWrapper}>\n            <button\n              className={styles.listHeader}\n              onClick={() => toggleExpandMenu(!expandAdminMenu)}\n            >\n              <span>Администрирование</span>\n              &nbsp; &nbsp;\n              <span\n                className={clsx({\n                  [styles.listHeader__rotate]: expandAdminMenu,\n                })}\n              >\n                <AdminArrowMenuIcon />\n              </span>\n            </button>\n            <div className={styles.list}>\n              {expandAdminMenu &&\n                menuListAdmin &&\n                menuListAdmin.map((item, index) => {\n                  const selected = hist === item.url\n                  return (\n                    <button\n                      key={index}\n                      className={clsx({\n                        [styles.listItem]: true,\n                        [styles.listItemActive]: selected,\n                      })}\n                      onClick={() => {\n                        history.push(item.url)\n                        return handleChangeDrawer(item.url)\n                      }}\n                    >\n                      <div\n                        className={clsx({\n                          [styles.listItemRootTextAdmin]: true,\n                          [styles.listItemTextActive]: selected,\n                        })}\n                      >\n                        {item.label}\n                      </div>\n                      <div>{item.warning && warningIcon}</div>\n                    </button>\n                  )\n                })}\n            </div>\n          </section>\n        </section>\n      </section>\n    )\n  }\n)\n"]},"metadata":{},"sourceType":"module"}