{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anastasia\\\\Desktop\\\\\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430\\\\Project-TS-LK\\\\src\\\\templates\\\\Buttons\\\\SwitchButton.tsx\";\nimport React from 'react';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nconst AntSwitch = withStyles(theme => createStyles({\n  root: {\n    width: 28,\n    //28\n    height: 16,\n    //16\n    padding: 0,\n    display: 'flex'\n  },\n  switchBase: {\n    padding: 2,\n    color: theme.palette.grey[500],\n    '&$checked': {\n      transform: 'translateX(12px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        opacity: 1,\n        backgroundColor: theme.palette.primary.main,\n        borderColor: theme.palette.primary.main\n      }\n    }\n  },\n  thumb: {\n    width: 12,\n    height: 12,\n    boxShadow: 'none'\n  },\n  track: {\n    border: `1px solid ${theme.palette.grey[500]}`,\n    borderRadius: 16 / 2,\n    opacity: 1,\n    backgroundColor: theme.palette.common.white\n  },\n  checked: {}\n}))(Switch);\nexport const CustomizedSwitches = React.memo(({\n  checked,\n  handleChange\n}) => {\n  return /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    component: \"label\",\n    container: true,\n    alignItems: \"center\",\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AntSwitch, {\n    checked: checked,\n    onChange: handleChange,\n    name: \"checkedC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  })))));\n});","map":{"version":3,"sources":["C:/Users/anastasia/Desktop/Новая папка/Project-TS-LK/src/templates/Buttons/SwitchButton.tsx"],"names":["React","withStyles","createStyles","FormGroup","Switch","Grid","Typography","AntSwitch","theme","root","width","height","padding","display","switchBase","color","palette","grey","transform","common","white","opacity","backgroundColor","primary","main","borderColor","thumb","boxShadow","track","border","borderRadius","checked","CustomizedSwitches","memo","handleChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAA4BC,YAA5B,QAAgD,0BAAhD;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAqC,0BAArC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAOA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,IAC3BN,YAAY,CAAC;AACXO,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,EADH;AACO;AACXC,IAAAA,MAAM,EAAE,EAFJ;AAEQ;AACZC,IAAAA,OAAO,EAAE,CAHL;AAIJC,IAAAA,OAAO,EAAE;AAJL,GADK;AAOXC,EAAAA,UAAU,EAAE;AACVF,IAAAA,OAAO,EAAE,CADC;AAEVG,IAAAA,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,GAAnB,CAFG;AAGV,iBAAa;AACXC,MAAAA,SAAS,EAAE,kBADA;AAEXH,MAAAA,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcG,MAAd,CAAqBC,KAFjB;AAGX,oBAAc;AACZC,QAAAA,OAAO,EAAE,CADG;AAEZC,QAAAA,eAAe,EAAEd,KAAK,CAACQ,OAAN,CAAcO,OAAd,CAAsBC,IAF3B;AAGZC,QAAAA,WAAW,EAAEjB,KAAK,CAACQ,OAAN,CAAcO,OAAd,CAAsBC;AAHvB;AAHH;AAHH,GAPD;AAoBXE,EAAAA,KAAK,EAAE;AACLhB,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,MAAM,EAAE,EAFH;AAGLgB,IAAAA,SAAS,EAAE;AAHN,GApBI;AAyBXC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAG,aAAYrB,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,GAAnB,CAAwB,EADxC;AAELa,IAAAA,YAAY,EAAE,KAAK,CAFd;AAGLT,IAAAA,OAAO,EAAE,CAHJ;AAILC,IAAAA,eAAe,EAAEd,KAAK,CAACQ,OAAN,CAAcG,MAAd,CAAqBC;AAJjC,GAzBI;AA+BXW,EAAAA,OAAO,EAAE;AA/BE,CAAD,CADc,CAAV,CAkChB3B,MAlCgB,CAAlB;AAoCA,OAAO,MAAM4B,kBAAmC,GAAGhC,KAAK,CAACiC,IAAN,CACjD,CAAC;AAAEF,EAAAA,OAAF;AAAWG,EAAAA;AAAX,CAAD,KAA+B;AAC7B,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAwB,IAAA,SAAS,MAAjC;AAAkC,IAAA,UAAU,EAAC,QAA7C;AAAsD,IAAA,OAAO,EAAE,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAEH,OADX;AAEE,IAAA,QAAQ,EAAEG,YAFZ;AAGE,IAAA,IAAI,EAAC,UAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF,CADF;AAeD,CAjBgD,CAA5C","sourcesContent":["import React from 'react'\r\nimport { withStyles, Theme, createStyles } from '@material-ui/core/styles'\r\nimport FormGroup from '@material-ui/core/FormGroup'\r\nimport Switch, {  SwitchProps } from '@material-ui/core/Switch'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\ninterface Props extends SwitchProps {\r\n  checked: boolean\r\n  handleChange: () => void\r\n}\r\n\r\nconst AntSwitch = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: 28, //28\r\n      height: 16, //16\r\n      padding: 0,\r\n      display: 'flex',\r\n    },\r\n    switchBase: {\r\n      padding: 2,\r\n      color: theme.palette.grey[500],\r\n      '&$checked': {\r\n        transform: 'translateX(12px)',\r\n        color: theme.palette.common.white,\r\n        '& + $track': {\r\n          opacity: 1,\r\n          backgroundColor: theme.palette.primary.main,\r\n          borderColor: theme.palette.primary.main,\r\n        },\r\n      },\r\n    },\r\n    thumb: {\r\n      width: 12,\r\n      height: 12,\r\n      boxShadow: 'none',\r\n    },\r\n    track: {\r\n      border: `1px solid ${theme.palette.grey[500]}`,\r\n      borderRadius: 16 / 2,\r\n      opacity: 1,\r\n      backgroundColor: theme.palette.common.white,\r\n    },\r\n    checked: {},\r\n  })\r\n)(Switch)\r\n\r\nexport const CustomizedSwitches: React.FC<Props> = React.memo(\r\n  ({ checked, handleChange }) => {\r\n    return (\r\n      <FormGroup>\r\n        <Typography component=\"div\">\r\n          <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n            <Grid item>\r\n              <AntSwitch\r\n                checked={checked}\r\n                onChange={handleChange}\r\n                name=\"checkedC\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Typography>\r\n      </FormGroup>\r\n    )\r\n  }\r\n)\r\n"]},"metadata":{},"sourceType":"module"}