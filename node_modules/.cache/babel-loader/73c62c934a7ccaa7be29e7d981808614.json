{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anastasia\\\\Desktop\\\\\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430\\\\Project-TS-LK\\\\src\\\\components\\\\Pages\\\\Payment\\\\HistoryPayment\\\\HistoryPaymentContainer.tsx\";\nimport React from 'react';\nimport { DefaultTable } from 'templates/Tables/DefaultTable';\nexport const HistoryPaymentContainer = React.memo(({}) => {\n  const [changeData, setChangeData] = React.useState({});\n  const [data] = React.useState([{\n    date: '01.05.2020',\n    method: 'Банковская карта',\n    status: {\n      id: 1,\n      name: 'Оплачен'\n    },\n    sum: {\n      id: 1,\n      value: '+ 20 000 ₽'\n    }\n  }, {\n    date: '25.03.2020',\n    method: 'Оплата по счёту',\n    status: {\n      id: 2,\n      name: 'Не оплачен'\n    },\n    sum: {\n      id: 2,\n      value: 'Скачать счёт',\n      url: '#'\n    }\n  }, {\n    date: '04.02.2020',\n    method: 'Оплата по счёту',\n    status: {\n      id: 3,\n      name: 'Сформировать акт',\n      url: '#'\n    },\n    sum: {\n      id: 1,\n      value: '+ 15 000 ₽'\n    }\n  }]);\n  return /*#__PURE__*/React.createElement(DefaultTable, {\n    type: \"historyPayment\",\n    data: data,\n    headers: ['Дата', 'Способ оплаты', 'Статус', 'Сумма'],\n    onChangeRow: data => setChangeData(data),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  });\n});","map":{"version":3,"sources":["C:/Users/anastasia/Desktop/Новая папка/Project-TS-LK/src/components/Pages/Payment/HistoryPayment/HistoryPaymentContainer.tsx"],"names":["React","DefaultTable","HistoryPaymentContainer","memo","changeData","setChangeData","useState","data","date","method","status","id","name","sum","value","url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,+BAA7B;AAEA,OAAO,MAAMC,uBAAuB,GAAGF,KAAK,CAACG,IAAN,CAAW,CAAC,EAAD,KAAQ;AACxD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,KAAK,CAACM,QAAN,CAAoB,EAApB,CAApC;AACA,QAAM,CAACC,IAAD,IAASP,KAAK,CAACM,QAAN,CAAe,CAC5B;AACEE,IAAAA,IAAI,EAAE,YADR;AAEEC,IAAAA,MAAM,EAAE,kBAFV;AAGEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAE;AAAf,KAHV;AAIEC,IAAAA,GAAG,EAAE;AACHF,MAAAA,EAAE,EAAE,CADD;AAEHG,MAAAA,KAAK,EAAE;AAFJ;AAJP,GAD4B,EAU5B;AACEN,IAAAA,IAAI,EAAE,YADR;AAEEC,IAAAA,MAAM,EAAE,iBAFV;AAGEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAE;AAAf,KAHV;AAIEC,IAAAA,GAAG,EAAE;AAAEF,MAAAA,EAAE,EAAE,CAAN;AAASG,MAAAA,KAAK,EAAE,cAAhB;AAAgCC,MAAAA,GAAG,EAAE;AAArC;AAJP,GAV4B,EAgB5B;AACEP,IAAAA,IAAI,EAAE,YADR;AAEEC,IAAAA,MAAM,EAAE,iBAFV;AAGEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAE,kBAAf;AAAmCG,MAAAA,GAAG,EAAE;AAAxC,KAHV;AAIEF,IAAAA,GAAG,EAAE;AAAEF,MAAAA,EAAE,EAAE,CAAN;AAASG,MAAAA,KAAK,EAAE;AAAhB;AAJP,GAhB4B,CAAf,CAAf;AAuBA,sBACE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAC,gBADP;AAEE,IAAA,IAAI,EAAEP,IAFR;AAGE,IAAA,OAAO,EAAE,CAAC,MAAD,EAAS,eAAT,EAA0B,QAA1B,EAAoC,OAApC,CAHX;AAIE,IAAA,WAAW,EAAGA,IAAD,IAAUF,aAAa,CAACE,IAAD,CAJtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CAjCsC,CAAhC","sourcesContent":["import React from 'react'\r\nimport { DefaultTable } from 'templates/Tables/DefaultTable'\r\n\r\nexport const HistoryPaymentContainer = React.memo(({}) => {\r\n  const [changeData, setChangeData] = React.useState<any>({})\r\n  const [data] = React.useState([\r\n    {\r\n      date: '01.05.2020',\r\n      method: 'Банковская карта',\r\n      status: { id: 1, name: 'Оплачен' },\r\n      sum: {\r\n        id: 1,\r\n        value: '+ 20 000 ₽',\r\n      },\r\n    },\r\n    {\r\n      date: '25.03.2020',\r\n      method: 'Оплата по счёту',\r\n      status: { id: 2, name: 'Не оплачен' },\r\n      sum: { id: 2, value: 'Скачать счёт', url: '#' },\r\n    },\r\n    {\r\n      date: '04.02.2020',\r\n      method: 'Оплата по счёту',\r\n      status: { id: 3, name: 'Сформировать акт', url: '#' },\r\n      sum: { id: 1, value: '+ 15 000 ₽' },\r\n    },\r\n  ])\r\n  return (\r\n    <DefaultTable\r\n      type=\"historyPayment\"\r\n      data={data}\r\n      headers={['Дата', 'Способ оплаты', 'Статус', 'Сумма']}\r\n      onChangeRow={(data) => setChangeData(data)}\r\n    />\r\n  )\r\n})\r\n"]},"metadata":{},"sourceType":"module"}