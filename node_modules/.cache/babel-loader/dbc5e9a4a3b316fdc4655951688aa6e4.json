{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anastasia\\\\Desktop\\\\NevaLK\\\\src\\\\templates\\\\Select\\\\Select.tsx\";\nimport React from 'react'; //styles\n\nimport styles from './style.module.scss';\nexport const NativeSelect = React.memo(({\n  data,\n  onChange,\n  name,\n  value,\n  placeholder\n}) => {\n  return /*#__PURE__*/React.createElement(\"select\", {\n    className: styles.root,\n    name: name,\n    onChange: event => {\n      if (onChange && typeof onChange === 'function') return onChange(event);\n    },\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, placeholder), data && Array.isArray(data) && data.map((d, index) => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: d.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, d.name);\n  }));\n});","map":{"version":3,"sources":["C:/Users/anastasia/Desktop/NevaLK/src/templates/Select/Select.tsx"],"names":["React","styles","NativeSelect","memo","data","onChange","name","value","placeholder","root","event","Array","isArray","map","d","index","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAUA,OAAO,MAAMC,YAAqC,GAAGF,KAAK,CAACG,IAAN,CACnD,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,IAAlB;AAAwBC,EAAAA,KAAxB;AAA+BC,EAAAA;AAA/B,CAAD,KAAkD;AAChD,sBACE;AACE,IAAA,SAAS,EAAEP,MAAM,CAACQ,IADpB;AAEE,IAAA,IAAI,EAAEH,IAFR;AAGE,IAAA,QAAQ,EAAGI,KAAD,IAAW;AACnB,UAAIL,QAAQ,IAAI,OAAOA,QAAP,KAAoB,UAApC,EAAgD,OAAOA,QAAQ,CAACK,KAAD,CAAf;AACjD,KALH;AAME,IAAA,KAAK,EAAEH,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAiB,IAAA,QAAQ,MAAzB;AAA0B,IAAA,MAAM,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,WADH,CARF,EAWGJ,IAAI,IACHO,KAAK,CAACC,OAAN,CAAcR,IAAd,CADD,IAECA,IAAI,CAACS,GAAL,CAAS,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACrB,wBACE;AAAQ,MAAA,GAAG,EAAEA,KAAb;AAAoB,MAAA,KAAK,EAAED,CAAC,CAACE,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,CAAC,CAACR,IADL,CADF;AAKD,GAND,CAbJ,CADF;AAuBD,CAzBkD,CAA9C","sourcesContent":["import React from 'react'\n//styles\nimport styles from './style.module.scss'\n\ninterface INativeSelect {\n  data: { id: number; name: string }[]\n  name: string\n  value: string\n  placeholder: string\n  onChange?: (event: React.ChangeEvent<HTMLSelectElement>) => void\n}\n\nexport const NativeSelect: React.FC<INativeSelect> = React.memo(\n  ({ data, onChange, name, value, placeholder }) => {\n    return (\n      <select\n        className={styles.root}\n        name={name}\n        onChange={(event) => {\n          if (onChange && typeof onChange === 'function') return onChange(event)\n        }}\n        value={value}\n      >\n        <option value=\"\" disabled hidden>\n          {placeholder}\n        </option>\n        {data &&\n          Array.isArray(data) &&\n          data.map((d, index) => {\n            return (\n              <option key={index} value={d.id}>\n                {d.name}\n              </option>\n            )\n          })}\n      </select>\n    )\n  }\n)\n"]},"metadata":{},"sourceType":"module"}